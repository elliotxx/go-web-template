// Package openapispec GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package openapispec

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/systemconfig": {
            "put": {
                "description": "Update the specified system config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update system config",
                "parameters": [
                    {
                        "description": "Updated system config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemconfig.UpdateSystemConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/entity.SystemConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create a new system config instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create system config",
                "parameters": [
                    {
                        "description": "Created system config",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemconfig.CreateSystemConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/entity.SystemConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/systemconfig/count": {
            "get": {
                "description": "Count the total number of system configs",
                "produces": [
                    "application/json"
                ],
                "summary": "Count system configs",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/entity.SystemConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/systemconfig/{id}": {
            "get": {
                "description": "Get system config information by system config ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get system config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SystemConfig ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/entity.SystemConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete specified system config by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete system config",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "SystemConfig ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/entity.SystemConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/api/v1/systemconfigs": {
            "get": {
                "description": "Find system configs with query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Find system configs",
                "parameters": [
                    {
                        "description": "query body",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/systemconfig.QuerySystemConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/entity.SystemConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.SystemConfig": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "Configuration data in JSON or YAML format",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Timestamp when the system was created",
                    "type": "string"
                },
                "creator": {
                    "description": "Username or ID of the user who created the system",
                    "type": "string"
                },
                "description": {
                    "description": "Description or purpose of the system",
                    "type": "string"
                },
                "env": {
                    "description": "Environment where the system is deployed (e.g. prod, gray)",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID of the system",
                    "type": "integer"
                },
                "modifier": {
                    "description": "Username or ID of the user who last modified the system",
                    "type": "string"
                },
                "tenant": {
                    "description": "Tenant or organization that the system belongs to",
                    "type": "string"
                },
                "type": {
                    "description": "Type or category of the system (e.g. cache, message queue)",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Timestamp when the system was last updated",
                    "type": "string"
                }
            }
        },
        "systemconfig.CreateSystemConfigRequest": {
            "type": "object",
            "required": [
                "config",
                "creator",
                "env",
                "tenant",
                "type"
            ],
            "properties": {
                "config": {
                    "description": "Configuration data in JSON or YAML format",
                    "type": "string"
                },
                "creator": {
                    "description": "Username or ID of the user who created the system",
                    "type": "string"
                },
                "description": {
                    "description": "Description or purpose of the system",
                    "type": "string"
                },
                "env": {
                    "description": "Environment where the system is deployed (e.g. prod, gray)",
                    "type": "string"
                },
                "modifier": {
                    "description": "Username or ID of the user who last modified the system",
                    "type": "string"
                },
                "tenant": {
                    "description": "Tenant or organization that the system belongs to",
                    "type": "string"
                },
                "type": {
                    "description": "Type or category of the system (e.g. cache, message queue)",
                    "type": "string"
                }
            }
        },
        "systemconfig.QuerySystemConfigRequest": {
            "type": "object",
            "required": [
                "page",
                "perPage"
            ],
            "properties": {
                "keyword": {
                    "description": "Keyword is the keyword to search for.\nOptional: true",
                    "type": "string"
                },
                "page": {
                    "description": "Page is the page number, starting from 1.\nRequired: true, Minimum value: 1",
                    "type": "integer",
                    "minimum": 1
                },
                "perPage": {
                    "description": "PerPage is the number of items per page.\nRequired: true, Minimum value: 1, Maximum value: 300",
                    "type": "integer",
                    "maximum": 300,
                    "minimum": 1
                }
            }
        },
        "systemconfig.UpdateSystemConfigRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "config": {
                    "description": "Configuration data in JSON or YAML format",
                    "type": "string"
                },
                "creator": {
                    "description": "Username or ID of the user who created the system",
                    "type": "string"
                },
                "description": {
                    "description": "Description or purpose of the system",
                    "type": "string"
                },
                "env": {
                    "description": "Environment where the system is deployed (e.g. prod, gray)",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID of the system",
                    "type": "integer"
                },
                "modifier": {
                    "description": "Username or ID of the user who last modified the system",
                    "type": "string"
                },
                "tenant": {
                    "description": "Tenant or organization that the system belongs to",
                    "type": "string"
                },
                "type": {
                    "description": "Type or category of the system (e.g. cache, message queue)",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
